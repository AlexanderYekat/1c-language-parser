Функция РазложитьСтрокуВМассивПодстрок(Знач Строка, Знач Разделитель = ",", Знач ПропускатьПустыеСтроки = Неопределено, СокращатьНепечатаемыеСимволы = Ложь) Экспорт

    Результат = Новый Массив();
    Если ПропускатьПустыеСтроки = Неопределено Тогда
        ПропускатьПустыеСтроки = ?(Разделитель = " ", Истина, Ложь);
        Если ПустаяСтрока(Строка) Тогда
            Если Разделитель = " " Тогда
                Результат.Добавить("");
            КонецЕсли;

            Возврат Результат;
        КонецЕсли;

    КонецЕсли;

    Позиция = Найти(Строка, Разделитель);
    Пока Позиция > 0 Цикл
        Подстрока = Лев(Строка, Позиция - 1);
        Если Не ПропускатьПустыеСтроки ИЛИ Не ПустаяСтрока(Подстрока) Тогда
            Если СокращатьНепечатаемыеСимволы Тогда
                Результат.Добавить(СокрЛП(Подстрока));
            Иначе
                Результат.Добавить(Подстрока);
            КонецЕсли;

        КонецЕсли;

        Строка = Сред(Строка, Позиция + СтрДлина(Разделитель));
        Позиция = Найти(Строка, Разделитель);
    КонецЦикла;

    Если Не ПропускатьПустыеСтроки ИЛИ Не ПустаяСтрока(Строка) Тогда
        Если СокращатьНепечатаемыеСимволы Тогда
            Результат.Добавить(СокрЛП(Строка));
        Иначе
            Результат.Добавить(Строка);
        КонецЕсли;

    КонецЕсли;

    Возврат Результат;


КонецФункции


Функция СтрокаИзМассиваПодстрок(Массив, Разделитель = ",", СокращатьНепечатаемыеСимволы = Ложь) Экспорт

    Результат = "";
    Для Индекс = 0 По Массив.ВГраница() Цикл
        Подстрока = Массив[Индекс];
        Если СокращатьНепечатаемыеСимволы Тогда
            Подстрока = СокрЛП(Подстрока);
        КонецЕсли;

        Если ТипЗнч(Подстрока) <> Тип("Строка") Тогда
            Подстрока = Строка(Подстрока);
        КонецЕсли;

        Если Индекс > 0 Тогда
            Результат = Результат + Разделитель;
        КонецЕсли;

        Результат = Результат + Подстрока;
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ЭтоРазделительСлов(КодСимвола, РазделителиСлов = Неопределено) Экспорт

    Если РазделителиСлов <> Неопределено Тогда
        Возврат Найти(РазделителиСлов, Символ(КодСимвола)) > 0;
    КонецЕсли;

    Диапазоны = Новый Массив();
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 48, 57));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 65, 90));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 97, 122));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 1040, 1103));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 1025, 1025));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 1105, 1105));
    Диапазоны.Добавить(Новый Структура("Мин,Макс", 95, 95));
    Для Каждого Диапазон Из Диапазоны Цикл
        Если КодСимвола >= Диапазон.Мин И КодСимвола <= Диапазон.Макс Тогда
            Возврат Ложь;
        КонецЕсли;

    КонецЦикла;

    Возврат Истина;


КонецФункции


Функция РазложитьСтрокуВМассивСлов(Знач Строка, РазделителиСлов = Неопределено) Экспорт

    Слова = Новый Массив();
    РазмерТекста = СтрДлина(Строка);
    НачалоСлова = 1;
    Для Позиция = 1 По РазмерТекста Цикл
        КодСимвола = КодСимвола(Строка, Позиция);
        Если ЭтоРазделительСлов(КодСимвола, РазделителиСлов) Тогда
            Если Позиция <> НачалоСлова Тогда
                Слова.Добавить(Сред(Строка, НачалоСлова, Позиция - НачалоСлова));
            КонецЕсли;

            НачалоСлова = Позиция + 1;
        КонецЕсли;

    КонецЦикла;

    Если Позиция <> НачалоСлова Тогда
        Слова.Добавить(Сред(Строка, НачалоСлова, Позиция - НачалоСлова));
    КонецЕсли;

    Возврат Слова;


КонецФункции


Функция ПодставитьПараметрыВСтроку(Знач СтрокаПодстановки, Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено, Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено, Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено) Экспорт

    ИспользоватьАльтернативныйАлгоритм = Найти(Параметр1, "%") ИЛИ Найти(Параметр2, "%") ИЛИ Найти(Параметр3, "%") ИЛИ Найти(Параметр4, "%") ИЛИ Найти(Параметр5, "%") ИЛИ Найти(Параметр6, "%") ИЛИ Найти(Параметр7, "%") ИЛИ Найти(Параметр8, "%") ИЛИ Найти(Параметр9, "%");
    Если ИспользоватьАльтернативныйАлгоритм Тогда
        СтрокаПодстановки = ПодставитьПараметрыВСтрокуАльтернативныйАлгоритм(СтрокаПодстановки, Параметр1, Параметр2, Параметр3, Параметр4, Параметр5, Параметр6, Параметр7, Параметр8, Параметр9);
    Иначе
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%1", Параметр1);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%2", Параметр2);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%3", Параметр3);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%4", Параметр4);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%5", Параметр5);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%6", Параметр6);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%7", Параметр7);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%8", Параметр8);
        СтрокаПодстановки = СтрЗаменить(СтрокаПодстановки, "%9", Параметр9);
    КонецЕсли;

    Возврат СтрокаПодстановки;


КонецФункции


Функция ПодставитьПараметрыВСтрокуИзМассива(Знач СтрокаПодстановки, Знач МассивПараметров) Экспорт

    СтрокаРезультата = СтрокаПодстановки;
    Индекс = МассивПараметров.Количество();
    Пока Индекс > 0 Цикл
        Значение = МассивПараметров[Индекс - 1];
        Если Не ПустаяСтрока(Значение) Тогда
            СтрокаРезультата = СтрЗаменить(СтрокаРезультата, "%" + Формат(Индекс, "ЧГ="), Значение);
        КонецЕсли;

        Индекс = Индекс - 1;
    КонецЦикла;

    Возврат СтрокаРезультата;


КонецФункции


Функция ВставитьПараметрыВСтроку(Знач ШаблонСтроки, ВставляемыеЗначения) Экспорт

    Результат = ШаблонСтроки;
    Для Каждого Параметр Из ВставляемыеЗначения Цикл
        Результат = СтрЗаменить(Результат, "[" + Параметр.Ключ + "]", Параметр.Значение);
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ПолучитьПараметрыИзСтроки(Знач СтрокаПараметров) Экспорт

    Результат = Новый Структура();
    СимволДвойныеКавычки = Символ(34);
    МассивПодстрок = РазложитьСтрокуВМассивПодстрок(СтрокаПараметров, ";");
    Для Каждого СтрокаПараметра Из МассивПодстрок Цикл
        ПозицияПервогоЗнакаРавенства = Найти(СтрокаПараметра, "=");
        ИмяПараметра = СокрЛП(Лев(СтрокаПараметра, ПозицияПервогоЗнакаРавенства - 1));
        ЗначениеПараметра = СокрЛП(Сред(СтрокаПараметра, ПозицияПервогоЗнакаРавенства + 1));
        Если Лев(ЗначениеПараметра, 1) = СимволДвойныеКавычки И Прав(ЗначениеПараметра, 1) = СимволДвойныеКавычки Тогда
            ЗначениеПараметра = Сред(ЗначениеПараметра, 2, СтрДлина(ЗначениеПараметра) - 2);
        КонецЕсли;

        Если Не ПустаяСтрока(ИмяПараметра) Тогда
            Результат.Вставить(ИмяПараметра, ЗначениеПараметра);
        КонецЕсли;

    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ТолькоЦифрыВСтроке(Знач СтрокаПроверки, Знач УчитыватьЛидирующиеНули = Истина, Знач УчитыватьПробелы = Истина) Экспорт

    Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
        Возврат Ложь;
    КонецЕсли;

    Если Не УчитыватьПробелы Тогда
        СтрокаПроверки = СтрЗаменить(СтрокаПроверки, " ", "");
    КонецЕсли;

    Если ПустаяСтрока(СтрокаПроверки) Тогда
        Возврат Истина;
    КонецЕсли;

    Если Не УчитыватьЛидирующиеНули Тогда
        Позиция = 1;
        Пока Сред(СтрокаПроверки, Позиция, 1) = "0" Цикл

            Позиция = Позиция + 1;
        КонецЦикла;

        СтрокаПроверки = Сред(СтрокаПроверки, Позиция);
    КонецЕсли;

    Возврат СтрДлина(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрЗаменить(СтрокаПроверки, "0", ""), "1", ""), "2", ""), "3", ""), "4", ""), "5", ""), "6", ""), "7", ""), "8", ""), "9", "")) = 0;


КонецФункции


Функция ТолькоКириллицаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт

    Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
        Возврат Ложь;
    КонецЕсли;

    Если Не ЗначениеЗаполнено(СтрокаПроверки) Тогда
        Возврат Истина;
    КонецЕсли;

    КодыДопустимыхСимволов = Новый Массив();
    КодыДопустимыхСимволов.Добавить(1105);
    КодыДопустимыхСимволов.Добавить(1025);
    Для Индекс = 1 По СтрДлина(ДопустимыеСимволы) Цикл
        КодыДопустимыхСимволов.Добавить(КодСимвола(Сред(ДопустимыеСимволы, Индекс, 1)));
    КонецЦикла;

    Для Индекс = 1 По СтрДлина(СтрокаПроверки) Цикл
        КодСимвола = КодСимвола(Сред(СтрокаПроверки, Индекс, 1));
        Если КодСимвола < 1040 ИЛИ КодСимвола > 1103 И КодыДопустимыхСимволов.Найти(КодСимвола) = Неопределено И Не (Не УчитыватьРазделителиСлов И ЭтоРазделительСлов(КодСимвола)) Тогда
            Возврат Ложь;
        КонецЕсли;

    КонецЦикла;

    Возврат Истина;


КонецФункции


Функция ТолькоЛатиницаВСтроке(Знач СтрокаПроверки, Знач УчитыватьРазделителиСлов = Истина, ДопустимыеСимволы = "") Экспорт

    Если ТипЗнч(СтрокаПроверки) <> Тип("Строка") Тогда
        Возврат Ложь;
    КонецЕсли;

    Если Не ЗначениеЗаполнено(СтрокаПроверки) Тогда
        Возврат Истина;
    КонецЕсли;

    КодыДопустимыхСимволов = Новый Массив();
    Для Индекс = 1 По СтрДлина(ДопустимыеСимволы) Цикл
        КодыДопустимыхСимволов.Добавить(КодСимвола(Сред(ДопустимыеСимволы, Индекс, 1)));
    КонецЦикла;

    Для Индекс = 1 По СтрДлина(СтрокаПроверки) Цикл
        КодСимвола = КодСимвола(Сред(СтрокаПроверки, Индекс, 1));
        Если КодСимвола < 65 ИЛИ КодСимвола > 90 И КодСимвола < 97 ИЛИ КодСимвола > 122 И КодыДопустимыхСимволов.Найти(КодСимвола) = Неопределено И Не (Не УчитыватьРазделителиСлов И ЭтоРазделительСлов(КодСимвола)) Тогда
            Возврат Ложь;
        КонецЕсли;

    КонецЦикла;

    Возврат Истина;


КонецФункции


Функция СократитьДвойныеКавычки(Знач Строка) Экспорт

    Пока Лев(Строка, 1) = """" Цикл
        Строка = Сред(Строка, 2);
    КонецЦикла;

    Пока Прав(Строка, 1) = """" Цикл
        Строка = Лев(Строка, СтрДлина(Строка) - 1);
    КонецЦикла;

    Возврат Строка;


КонецФункции


Процедура УдалитьПоследнийСимволВСтроке(Текст, ЧислоСимволов = 1) Экспорт

    Текст = Лев(Текст, СтрДлина(Текст) - ЧислоСимволов);


КонецПроцедуры


Функция НайтиСимволСКонца(Знач Строка, Знач Символ) Экспорт

    Для Позиция = СтрДлина(Строка) По -1 Цикл
        Если Сред(Строка, -Позиция, СтрДлина(Символ)) = Символ Тогда
            Возврат -Позиция;
        КонецЕсли;

    КонецЦикла;

    Возврат 0;


КонецФункции


Функция ЭтоУникальныйИдентификатор(Знач Строка) Экспорт

    Шаблон = "XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX";
    Если СтрДлина(Шаблон) <> СтрДлина(Строка) Тогда
        Возврат Ложь;
    КонецЕсли;

    Для Позиция = 1 По СтрДлина(Строка) Цикл
        Если КодСимвола(Шаблон, Позиция) = 88 И КодСимвола(Строка, Позиция) < 48 ИЛИ КодСимвола(Строка, Позиция) > 57 И КодСимвола(Строка, Позиция) < 97 ИЛИ КодСимвола(Строка, Позиция) > 102 И КодСимвола(Строка, Позиция) < 65 ИЛИ КодСимвола(Строка, Позиция) > 70 ИЛИ КодСимвола(Шаблон, Позиция) = 45 И КодСимвола(Строка, Позиция) <> 45 Тогда
            Возврат Ложь;
        КонецЕсли;

    КонецЦикла;

    Возврат Истина;


КонецФункции


Функция СформироватьСтрокуСимволов(Знач Символ, Знач ДлинаСтроки) Экспорт

    Результат = "";
    Для Счетчик = 1 По ДлинаСтроки Цикл
        Результат = Результат + Символ;
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ДополнитьСтроку(Знач Строка, Знач ДлинаСтроки, Знач Символ = "0", Знач Режим = "Слева") Экспорт

    Символ = Лев(Символ, 1);
    Строка = СокрЛП(Строка);
    КоличествоСимволовНадоДобавить = ДлинаСтроки - СтрДлина(Строка);
    Если КоличествоСимволовНадоДобавить > 0 Тогда
        СтрокаДляДобавления = СформироватьСтрокуСимволов(Символ, КоличествоСимволовНадоДобавить);
        Если ВРег(Режим) = "СЛЕВА" Тогда
            Строка = СтрокаДляДобавления + Строка;
        ИначеЕсли ВРег(Режим) = "СПРАВА" Тогда
            Строка = Строка + СтрокаДляДобавления;
        КонецЕсли;

    КонецЕсли;

    Возврат Строка;


КонецФункции


Функция УдалитьПовторяющиесяСимволы(Знач Строка, Знач Символ, Знач Режим = "Слева") Экспорт

    Если ВРег(Режим) = "СЛЕВА" Тогда
        Пока Лев(Строка, 1) = Символ Цикл
            Строка = Сред(Строка, 2);
        КонецЦикла;

    ИначеЕсли ВРег(Режим) = "СПРАВА" Тогда
        Пока Прав(Строка, 1) = Символ Цикл
            Строка = Лев(Строка, СтрДлина(Строка) - 1);
        КонецЦикла;

    КонецЕсли;

    Возврат Строка;


КонецФункции


Функция ЗаменитьОдниСимволыДругими(ЗаменяемыеСимволы, Строка, СимволыЗамены) Экспорт

    Результат = Строка;
    Для НомерСимвола = 1 По СтрДлина(ЗаменяемыеСимволы) Цикл
        Результат = СтрЗаменить(Результат, Сред(ЗаменяемыеСимволы, НомерСимвола, 1), Сред(СимволыЗамены, НомерСимвола, 1));
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ПреобразоватьЧислоВРимскуюНотацию(АрабскоеЧисло, ИспользоватьКириллицу = Истина) Экспорт

    РимскоеЧисло = "";
    АрабскоеЧисло = ДополнитьСтроку(АрабскоеЧисло, 3);
    Если ИспользоватьКириллицу Тогда
        c1 = "1";
        c5 = "У";
        c10 = "Х";
        c50 = "Л";
        c100 = "С";
        c500 = "Д";
        c1000 = "М";
    Иначе
        c1 = "I";
        c5 = "V";
        c10 = "X";
        c50 = "L";
        c100 = "C";
        c500 = "D";
        c1000 = "M";
    КонецЕсли;

    Единицы = Число(Сред(АрабскоеЧисло, 3, 1));
    Десятки = Число(Сред(АрабскоеЧисло, 2, 1));
    Сотни = Число(Сред(АрабскоеЧисло, 1, 1));
    РимскоеЧисло = РимскоеЧисло + ПреобразоватьЦифруВРимскуюНотацию(Сотни, c100, c500, c1000);
    РимскоеЧисло = РимскоеЧисло + ПреобразоватьЦифруВРимскуюНотацию(Десятки, c10, c50, c100);
    РимскоеЧисло = РимскоеЧисло + ПреобразоватьЦифруВРимскуюНотацию(Единицы, c1, c5, c10);
    Возврат РимскоеЧисло;


КонецФункции


Функция ПреобразоватьЧислоВАрабскуюНотацию(РимскоеЧисло, ИспользоватьКириллицу = Истина) Экспорт

    АрабскоеЧисло = 0;
    Если ИспользоватьКириллицу Тогда
        c1 = "1";
        c5 = "У";
        c10 = "Х";
        c50 = "Л";
        c100 = "С";
        c500 = "Д";
        c1000 = "М";
    Иначе
        c1 = "I";
        c5 = "V";
        c10 = "X";
        c50 = "L";
        c100 = "C";
        c500 = "D";
        c1000 = "M";
    КонецЕсли;

    РимскоеЧисло = СокрЛП(РимскоеЧисло);
    ЧислоСимволов = СтрДлина(РимскоеЧисло);
    Для Сч = 1 По ЧислоСимволов Цикл
        Если Сред(РимскоеЧисло, Сч, 1) = c1000 Тогда
            АрабскоеЧисло = АрабскоеЧисло + 1000;
        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c1 Тогда
            Если Сч < ЧислоСимволов И Сред(РимскоеЧисло, Сч + 1, 1) = c5 ИЛИ Сред(РимскоеЧисло, Сч + 1, 1) = c10 Тогда
                АрабскоеЧисло = АрабскоеЧисло - 1;
            Иначе
                АрабскоеЧисло = АрабскоеЧисло + 1;
            КонецЕсли;

        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c5 Тогда
            АрабскоеЧисло = АрабскоеЧисло + 5;
        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c10 Тогда
            Если Сч < ЧислоСимволов И Сред(РимскоеЧисло, Сч + 1, 1) = c50 ИЛИ Сред(РимскоеЧисло, Сч + 1, 1) = c100 Тогда
                АрабскоеЧисло = АрабскоеЧисло - 10;
            Иначе
                АрабскоеЧисло = АрабскоеЧисло + 10;
            КонецЕсли;

        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c50 Тогда
            АрабскоеЧисло = АрабскоеЧисло + 50;
        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c100 Тогда
            Если Сч < ЧислоСимволов И Сред(РимскоеЧисло, Сч + 1, 1) = c500 ИЛИ Сред(РимскоеЧисло, Сч + 1, 1) = c1000 Тогда
                АрабскоеЧисло = АрабскоеЧисло - 100;
            Иначе
                АрабскоеЧисло = АрабскоеЧисло + 100;
            КонецЕсли;

        ИначеЕсли Сред(РимскоеЧисло, Сч, 1) = c500 Тогда
            АрабскоеЧисло = АрабскоеЧисло + 500;
        КонецЕсли;

    КонецЦикла;

    Возврат АрабскоеЧисло;


КонецФункции


Функция ЧислоЦифрамиПредметИсчисленияПрописью(Знач Число, Знач ПараметрыПредметаИсчисления) Экспорт

    Результат = Формат(Число, "ЧН=0");
    МассивПредставлений = Новый Массив();
    Позиция = Найти(ПараметрыПредметаИсчисления, ",");
    Пока Позиция > 0 Цикл
        Значение = СокрЛП(Лев(ПараметрыПредметаИсчисления, Позиция - 1));
        ПараметрыПредметаИсчисления = Сред(ПараметрыПредметаИсчисления, Позиция + 1);
        МассивПредставлений.Добавить(Значение);
        Позиция = Найти(ПараметрыПредметаИсчисления, ",");
    КонецЦикла;

    Если СтрДлина(ПараметрыПредметаИсчисления) > 0 Тогда
        Значение = СокрЛП(ПараметрыПредметаИсчисления);
        МассивПредставлений.Добавить(Значение);
    КонецЕсли;

    Если Число >= 100 Тогда
        Число = Число - Цел(Число / 100) * 100;
    КонецЕсли;

    Если Число > 20 Тогда
        Число = Число - Цел(Число / 10) * 10;
    КонецЕсли;

    Если Число = 1 Тогда
        Результат = Результат + " " + МассивПредставлений[0];
    ИначеЕсли Число > 1 И Число < 5 Тогда
        Результат = Результат + " " + МассивПредставлений[1];
    Иначе
        Результат = Результат + " " + МассивПредставлений[2];
    КонецЕсли;

    Возврат Результат;


КонецФункции


Функция ИзвлечьТекстИзHTML(Знач ИсходныйТекст) Экспорт

    Результат = "";
    Текст = НРег(ИсходныйТекст);
    Позиция = Найти(Текст, "<body");
    Если Позиция > 0 Тогда
        Текст = Сред(Текст, Позиция + 5);
        ИсходныйТекст = Сред(ИсходныйТекст, Позиция + 5);
        Позиция = Найти(Текст, ">");
        Если Позиция > 0 Тогда
            Текст = Сред(Текст, Позиция + 1);
            ИсходныйТекст = Сред(ИсходныйТекст, Позиция + 1);
        КонецЕсли;

    КонецЕсли;

    Позиция = Найти(Текст, "</body>");
    Если Позиция > 0 Тогда
        Текст = Лев(Текст, Позиция - 1);
        ИсходныйТекст = Лев(ИсходныйТекст, Позиция - 1);
    КонецЕсли;

    Позиция = Найти(Текст, "<script");
    Пока Позиция > 0 Цикл
        ПозицияЗакрывающегоТега = Найти(Текст, "</script>");
        Если ПозицияЗакрывающегоТега = 0 Тогда
            ПозицияЗакрывающегоТега = СтрДлина(Текст);
        КонецЕсли;

        Текст = Лев(Текст, Позиция - 1) + Сред(Текст, ПозицияЗакрывающегоТега + 9);
        ИсходныйТекст = Лев(ИсходныйТекст, Позиция - 1) + Сред(ИсходныйТекст, ПозицияЗакрывающегоТега + 9);
        Позиция = Найти(Текст, "<script");
    КонецЦикла;

    Позиция = Найти(Текст, "<style");
    Пока Позиция > 0 Цикл
        ПозицияЗакрывающегоТега = Найти(Текст, "</style>");
        Если ПозицияЗакрывающегоТега = 0 Тогда
            ПозицияЗакрывающегоТега = СтрДлина(Текст);
        КонецЕсли;

        Текст = Лев(Текст, Позиция - 1) + Сред(Текст, ПозицияЗакрывающегоТега + 8);
        ИсходныйТекст = Лев(ИсходныйТекст, Позиция - 1) + Сред(ИсходныйТекст, ПозицияЗакрывающегоТега + 8);
        Позиция = Найти(Текст, "<style");
    КонецЦикла;

    Позиция = Найти(Текст, "<");
    Пока Позиция > 0 Цикл
        Результат = Результат + Лев(ИсходныйТекст, Позиция - 1);
        Текст = Сред(Текст, Позиция + 1);
        ИсходныйТекст = Сред(ИсходныйТекст, Позиция + 1);
        Позиция = Найти(Текст, ">");
        Если Позиция > 0 Тогда
            Текст = Сред(Текст, Позиция + 1);
            ИсходныйТекст = Сред(ИсходныйТекст, Позиция + 1);
        КонецЕсли;

        Позиция = Найти(Текст, "<");
    КонецЦикла;

    Результат = Результат + ИсходныйТекст;
    МассивСтрок = РазложитьСтрокуВМассивПодстрок(Результат, Символы.ПС, Истина, Истина);
    Возврат СокрЛП(СтрокаИзМассиваПодстрок(МассивСтрок, Символы.ПС));


КонецФункции


Функция СтрокаЛатиницей(Знач Строка) Экспорт

    Результат = "";
    Соответствие = СоответствиеКириллицыИЛатиницы();
    ПредыдущийСимвол = "";
    Для Позиция = 1 По СтрДлина(Строка) Цикл
        Символ = Сред(Строка, Позиция, 1);
        СимволЛатиницей = Соответствие[НРег(Символ)];
        Если СимволЛатиницей = Неопределено Тогда
            СимволЛатиницей = Символ;
        Иначе
            Если Символ = ВРег(Символ) Тогда
                СимволЛатиницей = ТРег(СимволЛатиницей);
            КонецЕсли;

        КонецЕсли;

        Результат = Результат + СимволЛатиницей;
        ПредыдущийСимвол = СимволЛатиницей;
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция ФорматированнаяСтрока(Знач Строка) Экспорт

    СтрокиСВыделением = Новый СписокЗначений();
    Пока Найти(Строка, "<b>") <> 0 Цикл
        НачалоВыделения = Найти(Строка, "<b>");
        СтрокаДоОткрывающегоТега = Лев(Строка, НачалоВыделения - 1);
        СтрокиСВыделением.Добавить(СтрокаДоОткрывающегоТега);
        СтрокаПослеОткрывающегоТега = Сред(Строка, НачалоВыделения + 3);
        КонецВыделения = Найти(СтрокаПослеОткрывающегоТега, "</b>");
        ВыделенныйФрагмент = Лев(СтрокаПослеОткрывающегоТега, КонецВыделения - 1);
        СтрокиСВыделением.Добавить(ВыделенныйФрагмент, , Истина);
        СтрокаПослеВыделения = Сред(СтрокаПослеОткрывающегоТега, КонецВыделения + 4);
        Строка = СтрокаПослеВыделения;
    КонецЦикла;

    СтрокиСВыделением.Добавить(Строка);
    СтрокиСоСсылками = Новый СписокЗначений();
    Для Каждого ЧастьСтроки Из СтрокиСВыделением Цикл
        Строка = ЧастьСтроки.Значение;
        Если ЧастьСтроки.Пометка Тогда
            СтрокиСоСсылками.Добавить(Строка, , Истина);
            Продолжить;
        КонецЕсли;

        НачалоВыделения = Найти(Строка, "<a href = ");
        Пока НачалоВыделения <> 0 Цикл
            СтрокаДоОткрывающегоТега = Лев(Строка, НачалоВыделения - 1);
            СтрокиСоСсылками.Добавить(СтрокаДоОткрывающегоТега, );
            СтрокаПослеОткрывающегоТега = Сред(Строка, НачалоВыделения + 9);
            ЗакрывающийТег = Найти(СтрокаПослеОткрывающегоТега, ">");
            Ссылка = СокрЛП(Лев(СтрокаПослеОткрывающегоТега, ЗакрывающийТег - 2));
            Если Лев(Ссылка, 1) = """" Тогда
                Ссылка = Сред(Ссылка, 2, СтрДлина(Ссылка) - 1);
            КонецЕсли;

            Если Прав(Ссылка, 1) = """" Тогда
                Ссылка = Сред(Ссылка, 1, СтрДлина(Ссылка) - 1);
            КонецЕсли;

            СтрокаПослеСсылки = Сред(СтрокаПослеОткрывающегоТега, ЗакрывающийТег + 1);
            КонецВыделения = Найти(СтрокаПослеСсылки, "</a>");
            ТекстСсылки = Лев(СтрокаПослеСсылки, КонецВыделения - 1);
            СтрокиСоСсылками.Добавить(ТекстСсылки, Ссылка);
            СтрокаПослеВыделения = Сред(СтрокаПослеСсылки, КонецВыделения + 4);
            Строка = СтрокаПослеВыделения;
            НачалоВыделения = Найти(Строка, "<a href = ");
        КонецЦикла;

        СтрокиСоСсылками.Добавить(Строка);
    КонецЦикла;

    МассивСтроки = Новый Массив();
    Для Каждого ЧастьСтроки Из СтрокиСоСсылками Цикл
        Если ЧастьСтроки.Пометка Тогда
            МассивСтроки.Добавить(Новый ФорматированнаяСтрока(ЧастьСтроки.Значение, Новый Шрифт(, , Истина)));
        ИначеЕсли Не ПустаяСтрока(ЧастьСтроки.Представление) Тогда
            МассивСтроки.Добавить(Новый ФорматированнаяСтрока(ЧастьСтроки.Значение, , , , ЧастьСтроки.Представление));
        Иначе
            МассивСтроки.Добавить(ЧастьСтроки.Значение);
        КонецЕсли;

    КонецЦикла;

    Возврат Новый ФорматированнаяСтрока(МассивСтроки);


КонецФункции


Функция СтрокаВЧисло(Знач ИсходнаяСтрока) Экспорт

    ИсходнаяСтрока = СокрЛП(ИсходнаяСтрока);
    Результат = 0;
    ЗнаковПослеЗапятой = -1;
    ЗнакОтрицательный = Ложь;
    Для НомерСимвола = 1 По СтрДлина(ИсходнаяСтрока) Цикл
        КодСимвола = КодСимвола(ИсходнаяСтрока, НомерСимвола);
        Если КодСимвола = 32 ИЛИ КодСимвола = 160 Тогда
        ИначеЕсли КодСимвола > 47 И КодСимвола < 58 Тогда
            Если ЗнаковПослеЗапятой <> -1 Тогда
                ЗнаковПослеЗапятой = ЗнаковПослеЗапятой + 1;
            КонецЕсли;

            Число = КодСимвола - 48;
            Результат = Результат * 10 + Число;
        ИначеЕсли КодСимвола = 44 ИЛИ КодСимвола = 46 Тогда
            Если ЗнаковПослеЗапятой <> -1 Тогда
                Возврат Неопределено;
            КонецЕсли;

            ЗнаковПослеЗапятой = 0;
        ИначеЕсли КодСимвола = 41 Тогда
            Если Не ЗнакОтрицательный ИЛИ Результат = 0 Тогда
                Возврат Неопределено;
            КонецЕсли;

        ИначеЕсли КодСимвола = 45 ИЛИ КодСимвола = 40 Тогда

            Если Результат <> 0 Тогда
                Возврат Неопределено;
            КонецЕсли;

            ЗнакОтрицательный = Истина;
        Иначе
            Возврат Неопределено;
        КонецЕсли;

    КонецЦикла;

    Если ЗнаковПослеЗапятой > 0 Тогда
        Результат = Результат / Pow(10, ЗнаковПослеЗапятой);
    КонецЕсли;

    Если ЗнакОтрицательный Тогда
        Результат = -Результат;
    КонецЕсли;

    Возврат Результат;


КонецФункции


Функция ПреобразоватьЦифруВРимскуюНотацию(Цифра, РимскаяЕдиница, РимскаяПятерка, РимскаяДесятка)

    РимскаяЦифра = "";
    Если Цифра = 1 Тогда
        РимскаяЦифра = РимскаяЕдиница;
    ИначеЕсли Цифра = 9 Тогда
        РимскаяЦифра = РимскаяЕдиница + РимскаяДесятка;
    ИначеЕсли Цифра = 8 Тогда
        РимскаяЦифра = РимскаяПятерка + РимскаяЕдиница + РимскаяЕдиница + РимскаяЕдиница;
    ИначеЕсли Цифра = 7 Тогда
        РимскаяЦифра = РимскаяПятерка + РимскаяЕдиница + РимскаяЕдиница;
    ИначеЕсли Цифра = 6 Тогда
        РимскаяЦифра = РимскаяПятерка + РимскаяЕдиница;
    ИначеЕсли Цифра = 5 Тогда
        РимскаяЦифра = РимскаяПятерка;
    ИначеЕсли Цифра = 4 Тогда
        РимскаяЦифра = РимскаяЕдиница + РимскаяПятерка;
    ИначеЕсли Цифра = 3 Тогда
        РимскаяЦифра = РимскаяЕдиница + РимскаяЕдиница + РимскаяЕдиница;
    ИначеЕсли Цифра = 2 Тогда
        РимскаяЦифра = РимскаяЕдиница + РимскаяЕдиница;
    КонецЕсли;

    Возврат РимскаяЦифра;


КонецФункции


Функция ПодставитьПараметрыВСтрокуАльтернативныйАлгоритм(Знач СтрокаПодстановки, Знач Параметр1, Знач Параметр2 = Неопределено, Знач Параметр3 = Неопределено, Знач Параметр4 = Неопределено, Знач Параметр5 = Неопределено, Знач Параметр6 = Неопределено, Знач Параметр7 = Неопределено, Знач Параметр8 = Неопределено, Знач Параметр9 = Неопределено)

    Результат = "";
    Позиция = Найти(СтрокаПодстановки, "%");
    Пока Позиция > 0 Цикл
        Результат = Результат + Лев(СтрокаПодстановки, Позиция - 1);
        СимволПослеПроцента = Сред(СтрокаПодстановки, Позиция + 1, 1);
        ПодставляемыйПараметр = "";
        Если СимволПослеПроцента = "1" Тогда
            ПодставляемыйПараметр = Параметр1;
        ИначеЕсли СимволПослеПроцента = "9" Тогда
            ПодставляемыйПараметр = Параметр9;
        ИначеЕсли СимволПослеПроцента = "8" Тогда
            ПодставляемыйПараметр = Параметр8;
        ИначеЕсли СимволПослеПроцента = "7" Тогда
            ПодставляемыйПараметр = Параметр7;
        ИначеЕсли СимволПослеПроцента = "6" Тогда
            ПодставляемыйПараметр = Параметр6;
        ИначеЕсли СимволПослеПроцента = "5" Тогда
            ПодставляемыйПараметр = Параметр5;
        ИначеЕсли СимволПослеПроцента = "4" Тогда
            ПодставляемыйПараметр = Параметр4;
        ИначеЕсли СимволПослеПроцента = "3" Тогда
            ПодставляемыйПараметр = Параметр3;
        ИначеЕсли СимволПослеПроцента = "2" Тогда
            ПодставляемыйПараметр = Параметр2;
        КонецЕсли;

        Если ПодставляемыйПараметр = "" Тогда
            Результат = Результат + "%";
            СтрокаПодстановки = Сред(СтрокаПодстановки, Позиция + 1);
        Иначе
            Результат = Результат + ПодставляемыйПараметр;

            СтрокаПодстановки = Сред(СтрокаПодстановки, Позиция + 2);
        КонецЕсли;

        Позиция = Найти(СтрокаПодстановки, "%");
    КонецЦикла;

    Результат = Результат + СтрокаПодстановки;
    Возврат Результат;


КонецФункции


Функция СоответствиеКириллицыИЛатиницы()

    Соответствие = Новый Соответствие();
    Соответствие.Вставить("а", "a");
    Соответствие.Вставить("б", "b");
    Соответствие.Вставить("в", "v");
    Соответствие.Вставить("г", "g");
    Соответствие.Вставить("д", "d");
    Соответствие.Вставить("е", "e");
    Соответствие.Вставить("ё", "e");
    Соответствие.Вставить("ж", "zh");
    Соответствие.Вставить("з", "z");
    Соответствие.Вставить("и", "i");
    Соответствие.Вставить("й", "y");
    Соответствие.Вставить("к", "k");
    Соответствие.Вставить("л", "l");
    Соответствие.Вставить("м", "m");
    Соответствие.Вставить("н", "n");
    Соответствие.Вставить("о", "o");
    Соответствие.Вставить("п", "p");
    Соответствие.Вставить("р", "r");
    Соответствие.Вставить("с", "s");
    Соответствие.Вставить("т", "t");
    Соответствие.Вставить("у", "u");
    Соответствие.Вставить("ф", "f");
    Соответствие.Вставить("х", "kh");
    Соответствие.Вставить("ц", "ts");
    Соответствие.Вставить("ч", "ch");
    Соответствие.Вставить("ш", "sh");
    Соответствие.Вставить("щ", "shch");
    Соответствие.Вставить("ъ", """");
    Соответствие.Вставить("ы", "y");
    Соответствие.Вставить("ь", "");
    Соответствие.Вставить("э", "e");
    Соответствие.Вставить("ю", "yu");
    Соответствие.Вставить("я", "ya");
    Возврат Соответствие;


КонецФункции


Функция ПолучитьСтрокуИзМассиваПодстрок(Массив, Разделитель = ",") Экспорт

    Результат = "";
    Для Каждого Элемент Из Массив Цикл
        Подстрока = ?(ТипЗнч(Элемент) = Тип("Строка"), Элемент, Строка(Элемент));
        РазделительПодстрок = ?(ПустаяСтрока(Результат), "", Разделитель);
        Результат = Результат + РазделительПодстрок + Подстрока;
    КонецЦикла;

    Возврат Результат;


КонецФункции


Функция СравнитьВерсии(Знач СтрокаВерсии1, Знач СтрокаВерсии2) Экспорт

    Возврат СтроковыеФункции.СравнитьВерсии(СтрокаВерсии1, СтрокаВерсии2);


КонецФункции


Функция ОтделитьНомер(Номер) Экспорт

    ДлинаСтроки = СтрДлина(Номер);
    НомерСтрокой = "";
    Префикс = "";
    Для Сч = 1 По ДлинаСтроки Цикл
        КодСимвола = КодСимвола(Номер, ДлинаСтроки - Сч + 1);
        Если КодСимвола >= КодСимвола("0") И КодСимвола <= КодСимвола("9") Тогда
            НомерСтрокой = Символ(КодСимвола) + НомерСтрокой;
        Иначе
            Префикс = Лев(Номер, ДлинаСтроки - Сч + 1);
            Прервать;
        КонецЕсли;

    КонецЦикла;

    Если НомерСтрокой <> "" Тогда
        КоличествоЛидирующихНулей = СтрДлина(НомерСтрокой);
        Результат = Число(НомерСтрокой);
    КонецЕсли;

    Возврат Новый Структура("Номер, Префикс, КоличествоЛидирующихНулей", Результат, Префикс, КоличествоЛидирующихНулей);


КонецФункции
